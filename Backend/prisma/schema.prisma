// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  name     String
  role     String @default("")
  email    String @unique
  password String
  verified       Boolean  @default(false)
  address        Address? @relation(fields: [addressId], references: [id])
  addressId      Int?     @unique
  refresh_token  String?
  verify_key     String   @default("")
  updatePassword Boolean  @default(false)
  owner          Owner?
  client         Client?
}

model Address {
  id     Int     @id @default(autoincrement())
  street String
  suite  String?
  city   String
  state  String
  zip    String
  user   User?
}

model Owner {
  id                   String                  @id @default(uuid())
  user                 User?                   @relation(fields: [userId], references: [id])
  userId               String?                 @unique
  estimate_preferences EstimateDayPreference[]
  excluded_Days        DateTime[]
}

model EstimateDayPreference {
  id        Int      @id @default(autoincrement())
  day       Days
  timeSlots String[]
  owner     Owner?   @relation(fields: [ownerId], references: [id])
  ownerId   String
}

enum Days {
  Monday
  Tuesday
  Wednesday
  Thursday
  Friday
  Saturday
  Sunday
}

model CalendarDay {
  id                String              @id @default(uuid())
  date              DateTime
  appointment_slots appointment_slots[]
  slots_available   String[]
}

model appointment_slots {
  date          DateTime
  id            Int              @id @default(autoincrement())
  time          String
  type          appointment_type
  client        Client?          @relation(fields: [clientId], references: [id])
  clientId      String?
  CalendarDay   CalendarDay?     @relation(fields: [calendarDayId], references: [id])
  calendarDayId String?
 
}

enum appointment_type {
  client_estimate
  client_appointment
}

model Client {
  id                String              @id @default(uuid())
  user              User?               @relation(fields: [userId], references: [id])
  userId            String?             @unique
  appointment_slots appointment_slots[]
  amt_due           String?
  amt_owed          String @default("0")
  quote             Quote[]
}

model Quote {
  id                Int                 @id @default(autoincrement())
  client            Client?             @relation(fields: [clientId], references: [id])
  clientId          String
  weekly String
  biweekly String
  triweekly String
  monthly String 
  initial String 
  offerOwner String?
  offerClient String?
  offerType String?
  state String?
}
